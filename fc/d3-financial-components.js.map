{"version":3,"sources":["..\\components\\fc.js","..\\components\\utilities\\chartLayout.js","..\\components\\utilities\\dataGenerator.js","..\\components\\utilities\\weekday.js","..\\components\\indicators\\bollingerBands.js","..\\components\\indicators\\movingAverage.js","..\\components\\indicators\\relativeStrengthIndex.js","..\\components\\scale\\financeScale.js","..\\components\\scale\\gridlines.js","..\\components\\scale\\linearScale.js","..\\components\\series\\candlestick.js","..\\components\\series\\comparison.js","..\\components\\series\\line.js","..\\components\\series\\ohlc.js","..\\components\\series\\volume.js","..\\components\\tools\\annotation.js","..\\components\\tools\\callouts.js","..\\components\\tools\\crosshairs.js","..\\components\\tools\\fibonacciFan.js","..\\components\\tools\\measure.js"],"names":[],"mappings":"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","file":"d3-financial-components.js","sourcesContent":["fc = {\r\n    version: '0.0.0',\r\n    indicators: {},\r\n    scale: {},\r\n    series: {},\r\n    tools: {},\r\n    utilities: {}\r\n};","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.utilities.chartLayout = function () {\r\n\r\n        // Default values\r\n        var margin = {top: 20, right: 20, bottom: 20, left: 20},\r\n            width = 0,\r\n            height = 0;\r\n\r\n        var defaultWidth = true,\r\n            defaultHeight = true;\r\n\r\n        var chartLayout = function (selection) {\r\n            selection.each( function () {\r\n                var element = d3.select(this),\r\n                    style = getComputedStyle(this);\r\n\r\n                // Attempt to automatically size the chart to the selected element\r\n                if (defaultWidth === true) {\r\n                    // Set the width of the chart to the width of the selected element,\r\n                    // excluding any margins, padding or borders\r\n                    var paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\r\n                    width = this.clientWidth - paddingWidth;\r\n\r\n                    // If the new width is too small, use a default width\r\n                    if (chartLayout.innerWidth() < 1) {\r\n                        width = 800 + margin.left + margin.right;\r\n                    }\r\n                }\r\n\r\n                if (defaultHeight === true) {\r\n                    // Set the height of the chart to the height of the selected element,\r\n                    // excluding any margins, padding or borders\r\n                    var paddingHeight = parseInt(style.paddingTop, 10) + parseInt(style.paddingBottom, 10);\r\n                    height = this.clientHeight - paddingHeight;\r\n\r\n                    // If the new height is too small, use a default height\r\n                    if (chartLayout.innerHeight() < 1) {\r\n                        height = 400 + margin.top + margin.bottom;\r\n                    }\r\n                }\r\n\r\n                // Create svg\r\n                var svg = element.append('svg')\r\n                    .attr('width', width)\r\n                    .attr('height', height);\r\n\r\n                // Create group for the chart\r\n                var chart =  svg.append('g')\r\n                    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n                // Clipping path\r\n                chart.append('defs').append('clipPath')\r\n                    .attr('id', 'plotAreaClip')\r\n                    .append('rect')\r\n                    .attr({ width: chartLayout.innerWidth(), height: chartLayout.innerHeight() });\r\n\r\n                // Create plot area, using the clipping path\r\n                chart.append('g')\r\n                    .attr('clip-path', 'url(#plotAreaClip)')\r\n                    .attr('class', 'plotArea');\r\n            });\r\n        };\r\n\r\n        chartLayout.marginTop = function (value) {\r\n            if (!arguments.length) {\r\n                return margin.top;\r\n            }\r\n            margin.top = value;\r\n            return chartLayout;\r\n        };\r\n\r\n        chartLayout.marginRight = function (value) {\r\n            if (!arguments.length) {\r\n                return margin.right;\r\n            }\r\n            margin.right = value;\r\n            return chartLayout;\r\n        };\r\n\r\n        chartLayout.marginBottom = function (value) {\r\n            if (!arguments.length) {\r\n                return margin.bottom;\r\n            }\r\n            margin.bottom = value;\r\n            return chartLayout;\r\n        };\r\n\r\n        chartLayout.marginLeft = function (value) {\r\n            if (!arguments.length) {\r\n                return margin.left;\r\n            }\r\n            margin.left = value;\r\n            return chartLayout;\r\n        };\r\n\r\n        chartLayout.width = function (value) {\r\n            if (!arguments.length) {\r\n                return width;\r\n            }\r\n            width = value;\r\n            defaultWidth = false;\r\n            return chartLayout;\r\n        };\r\n\r\n        chartLayout.height = function (value) {\r\n            if (!arguments.length) {\r\n                return height;\r\n            }\r\n            height = value;\r\n            defaultHeight = false;\r\n            return chartLayout;\r\n        };\r\n\r\n        chartLayout.innerWidth = function () {\r\n            var innerWidth = width - margin.left - margin.right;\r\n            return innerWidth;\r\n        };\r\n\r\n        chartLayout.innerHeight = function () {\r\n            var innerHeight = height - margin.top - margin.bottom;\r\n            return innerHeight;\r\n        };\r\n\r\n        return chartLayout;\r\n    };\r\n}(d3, fc));","(function (fc) {\r\n    'use strict';\r\n\r\n    fc.utilities.dataGenerator = function () {\r\n\r\n        var mu = 0.1,\r\n            sigma = 0.1,\r\n            startingPrice = 100,\r\n            startingVolume = 100000,\r\n            intraDaySteps = 50,\r\n            volumeNoiseFactor = 0.3,\r\n            toDate = new Date(),\r\n            fromDate = new Date(),\r\n            useFakeBoxMuller = false,\r\n            filter = function (date) {\r\n                return !(date.getDay() === 0 || date.getDay() === 6);\r\n            };\r\n\r\n        var generatePrices = function (period, steps) {\r\n            var increments = generateIncrements(period, steps, mu, sigma),\r\n                i, prices = [];\r\n            prices[0] = startingPrice;\r\n\r\n            for (i = 1; i < increments.length; i += 1) {\r\n                prices[i] = prices[i - 1] * increments[i];\r\n            }\r\n            return prices;\r\n        };\r\n\r\n        var generateVolumes = function (period, steps) {\r\n            var increments = generateIncrements(period, steps, 0, 1),\r\n                i, volumes = [];\r\n\r\n            volumeNoiseFactor = Math.max(0, Math.min(volumeNoiseFactor, 1));\r\n            volumes[0] = startingVolume;\r\n\r\n            for (i = 1; i < increments.length; i += 1) {\r\n                volumes[i] = volumes[i - 1] * increments[i];\r\n            }\r\n            volumes = volumes.map(function (vol) {\r\n                return Math.floor(vol * (1 - volumeNoiseFactor + Math.random() * volumeNoiseFactor * 2));\r\n            });\r\n            return volumes;\r\n        };\r\n\r\n        var generateIncrements = function (period, steps, mu, sigma) {\r\n            var deltaW = [],\r\n                deltaY = period / steps,\r\n                sqrtDeltaY = Math.sqrt(deltaY);\r\n\r\n            for(var i=0; i<steps; i++ ) {\r\n                var r = useFakeBoxMuller ?\r\n                    fakeBoxMullerTransform() :\r\n                    boxMullerTransform()[0];\r\n                r *= sqrtDeltaY;\r\n                r *= sigma;\r\n                r += (mu - ((sigma * sigma) / 2)) * deltaY;\r\n                deltaW.push(Math.exp(r));\r\n            }\r\n            return deltaW;\r\n        };\r\n\r\n        var boxMullerTransform = function() {\r\n            var x = 0, y = 0, rds, c;\r\n\r\n            // Get two random numbers from -1 to 1.\r\n            // If the radius is zero or greater than 1, throw them out and pick two new ones\r\n            do {\r\n                x = Math.random()*2-1;\r\n                y = Math.random()*2-1;\r\n                rds = x*x + y*y;\r\n            }\r\n            while (rds === 0 || rds > 1);\r\n\r\n            // This is the Box-Muller Transform\r\n            c = Math.sqrt(-2*Math.log(rds)/rds);\r\n\r\n            // It always creates a pair of numbers but it is quite efficient so don't be afraid to throw one away if you don't need both.\r\n            return [x*c, y*c];\r\n        };\r\n\r\n        var fakeBoxMullerTransform = function() {\r\n            return (Math.random()*2-1)+(Math.random()*2-1)+(Math.random()*2-1);\r\n        };\r\n\r\n        var generate = function() {\r\n\r\n            var msec_per_year = 3.15569e10,\r\n                rangeYears = (toDate.getTime() - fromDate.getTime()) / msec_per_year,\r\n                daysIncluded = 0,\r\n                prices,\r\n                volume,\r\n                ohlcv = [],\r\n                daySteps,\r\n                currentStep = 0,\r\n                currentIntraStep = 0;\r\n\r\n            var date = new Date(fromDate.getTime());\r\n            while (date <= toDate) {\r\n                if (!filter || filter(date)) {\r\n                    daysIncluded += 1;\r\n                }\r\n                date.setDate(date.getDate()+1);\r\n            }\r\n\r\n            prices = generatePrices(rangeYears, daysIncluded * intraDaySteps);\r\n            volume = generateVolumes(rangeYears, daysIncluded);\r\n\r\n            date = new Date(fromDate.getTime());\r\n            while(date <= toDate) {\r\n                if (!filter || filter(date)) {\r\n                    daySteps = prices.slice(currentIntraStep, currentIntraStep + intraDaySteps);\r\n                    ohlcv.push({\r\n                        date: new Date(date.getTime()),\r\n                        open: daySteps[0],\r\n                        high: Math.max.apply({}, daySteps),\r\n                        low: Math.min.apply({}, daySteps),\r\n                        close: daySteps[intraDaySteps - 1],\r\n                        volume: volume[currentStep]\r\n                    });\r\n                    currentIntraStep += intraDaySteps;\r\n                    currentStep += 1;\r\n                }\r\n                date.setDate(date.getDate()+1);\r\n            }\r\n\r\n            return ohlcv;\r\n        };\r\n\r\n        var dataGenerator = function (selection) {\r\n        };\r\n\r\n        dataGenerator.generate = function() {\r\n            return generate();\r\n        };\r\n\r\n        dataGenerator.mu = function (value) {\r\n            if (!arguments.length) {\r\n                return mu;\r\n            }\r\n            mu = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.sigma = function (value) {\r\n            if (!arguments.length) {\r\n                return sigma;\r\n            }\r\n            sigma = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.startingPrice = function (value) {\r\n            if (!arguments.length) {\r\n                return startingPrice;\r\n            }\r\n            startingPrice = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.startingVolume = function (value) {\r\n            if (!arguments.length) {\r\n                return startingVolume;\r\n            }\r\n            startingVolume = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.intraDaySteps = function (value) {\r\n            if (!arguments.length) {\r\n                return intraDaySteps;\r\n            }\r\n            intraDaySteps = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.volumeNoiseFactor = function (value) {\r\n            if (!arguments.length) {\r\n                return volumeNoiseFactor;\r\n            }\r\n            volumeNoiseFactor = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.filter = function (value) {\r\n            if (!arguments.length) {\r\n                return filter;\r\n            }\r\n            filter = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.toDate = function (value) {\r\n            if (!arguments.length) {\r\n                return toDate;\r\n            }\r\n            toDate = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        dataGenerator.fromDate = function (value) {\r\n            if (!arguments.length) {\r\n                return fromDate;\r\n            }\r\n            fromDate = value;\r\n            return dataGenerator;\r\n        };\r\n\r\n        return dataGenerator;\r\n    };\r\n}(fc));","(function(d3, fc) {\r\n    'use strict';\r\n\r\n    var weekdayCache = {};\r\n    var dateCache = {};\r\n\r\n    // Returns the weekday number for the given date relative to January 1, 1970.\r\n    function weekday(date) {\r\n\r\n        if (date in weekdayCache) {\r\n            return weekdayCache[date];\r\n        }\r\n\r\n        var weekdays = weekdayOfYear(date),\r\n            year = date.getFullYear();\r\n\r\n        while (--year >= 1970) {\r\n            weekdays += weekdaysInYear(year);\r\n        }\r\n\r\n        weekdayCache[date] = weekdays;\r\n        return weekdays;\r\n    }\r\n\r\n    // Returns the date for the specified weekday number relative to January 1, 1970.\r\n    weekday.invert = function(weekdays) {\r\n        if (weekdays in dateCache) {\r\n            return dateCache[weekdays];\r\n        }\r\n        var year = 1970,\r\n            yearWeekdays,\r\n            result;\r\n\r\n        // Compute the year.\r\n        while ((yearWeekdays = weekdaysInYear(year)) <= weekdays) {\r\n            ++year;\r\n            weekdays -= yearWeekdays;\r\n        }\r\n\r\n        // Compute the date from the remaining weekdays.\r\n        var days = weekdays % 5,\r\n            day0 = ((new Date(year, 0, 1)).getDay() + 6) % 7;\r\n        if (day0 + days > 4) {\r\n            days += 2;\r\n        }\r\n\r\n        result = new Date(year, 0, (weekdays / 5 | 0) * 7 + days + 1);\r\n        dateCache[weekdays] = result;\r\n        return result;\r\n    };\r\n\r\n    // Returns the number of weekdays in the specified year.\r\n    function weekdaysInYear(year) {\r\n        return weekdayOfYear(new Date(year, 11, 31)) + 1;\r\n    }\r\n\r\n    // Returns the weekday number for the given date relative to the start of the year.\r\n    function weekdayOfYear(date) {\r\n        var days = d3.time.dayOfYear(date),\r\n            weeks = days / 7 | 0,\r\n            day0 = (d3.time.year(date).getDay() + 6) % 7,\r\n            day1 = day0 + days - weeks * 7;\r\n        return Math.max(0, days - weeks * 2\r\n            - (day0 <= 5 && day1 >= 5 || day0 <= 12 && day1 >= 12) // extra saturday\r\n            - (day0 <= 6 && day1 >= 6 || day0 <= 13 && day1 >= 13)); // extra sunday\r\n    }\r\n\r\n    fc.utilities.weekday = weekday;\r\n\r\n}(d3, fc));\r\n","(function (d3, fc) {\r\n\t'use strict';\r\n\r\n\tfc.indicators.bollingerBands = function () {\r\n\r\n\t\tvar xScale = d3.time.scale(),\r\n\t\t\tyScale = d3.scale.linear();\r\n\r\n\t\tvar yValue = 0,\r\n\t\t\tmovingAverage = 20,\r\n\t\t\tstandardDeviations = 2;\r\n\r\n\t\tvar cssBandArea = 'bollingerBandArea',\r\n\t\t\tcssBandUpper = 'bollingerBandUpper',\r\n\t\t\tcssBandLower = 'bollingerBandLower',\r\n\t\t\tcssAverage = 'bollingerAverage';\r\n\r\n\t\tvar bollingerBands = function (selection) {\r\n\r\n\t\t\tvar areaBands = d3.svg.area(),\r\n\t\t\t\tlineUpper = d3.svg.line(),\r\n\t\t\t\tlineLower = d3.svg.line(),\r\n\t\t\t\tlineAverage = d3.svg.line();\r\n\r\n\t\t\tareaBands.x(function (d) { return xScale(d.date); });\r\n\t\t\tlineUpper.x(function (d) { return xScale(d.date); });\r\n\t\t\tlineLower.x(function (d) { return xScale(d.date); });\r\n\t\t\tlineAverage.x(function (d) { return xScale(d.date); });\r\n\r\n\t\t\tvar calculateMovingAverage = function (data, i) {\r\n\r\n\t\t\t\tif (movingAverage === 0) {\r\n\t\t\t\t\treturn data[i][yValue];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar count = Math.min(movingAverage, i + 1),\r\n\t\t\t\tfirst = i + 1 - count;\r\n\r\n\t\t\t\tvar sum = 0;\r\n\t\t\t\tfor (var index = first; index <= i; ++index) {\r\n\t\t\t\t\tvar x = data[index][yValue];\r\n\t\t\t\t\tsum += x;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sum / count;\r\n\t\t\t};\r\n\r\n\t\t\tvar calculateMovingStandardDeviation = function (data, i, avg) {\r\n\r\n\t\t\t\tif (movingAverage === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar count = Math.min(movingAverage, i + 1),\r\n\t\t\t\t\tfirst = i + 1 - count;\r\n\r\n\t\t\t\tvar sum = 0;\r\n\t\t\t\tfor (var index = first; index <= i; ++index) {\r\n\t\t\t\t\tvar x = data[index][yValue];\r\n\t\t\t\t\tvar dx = x - avg;\r\n\t\t\t\t\tsum += (dx * dx);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar variance = sum / count;\r\n\t\t\t\treturn Math.sqrt(variance);\r\n\t\t\t};\r\n\r\n\t\t\tselection.each(function (data) {\r\n\r\n\t\t\t\tvar bollingerData = {};\r\n\t\t\t\tfor (var index = 0; index < data.length; ++index) {\r\n\r\n\t\t\t\t\tvar date = data[index].date;\r\n\r\n\t\t\t\t\tvar avg = calculateMovingAverage(data, index);\r\n\t\t\t\t\tvar sd = calculateMovingStandardDeviation(data, index, avg);\r\n\r\n\t\t\t\t\tbollingerData[date] = {avg: avg, sd: sd};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tareaBands.y0(function (d) {\r\n\r\n\t\t\t\t\tvar avg = bollingerData[d.date].avg;\r\n\t\t\t\t\tvar sd = bollingerData[d.date].sd;\r\n\r\n\t\t\t\t\treturn yScale(avg + (sd * standardDeviations));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tareaBands.y1(function (d) {\r\n\r\n\t\t\t\t\tvar avg = bollingerData[d.date].avg;\r\n\t\t\t\t\tvar sd = bollingerData[d.date].sd;\r\n\r\n\t\t\t\t\treturn yScale(avg - (sd * standardDeviations));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlineUpper.y(function (d) {\r\n\r\n\t\t\t\t\tvar avg = bollingerData[d.date].avg;\r\n\t\t\t\t\tvar sd = bollingerData[d.date].sd;\r\n\r\n\t\t\t\t\treturn yScale(avg + (sd * standardDeviations));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlineLower.y(function (d) {\r\n\r\n\t\t\t\t\tvar avg = bollingerData[d.date].avg;\r\n\t\t\t\t\tvar sd = bollingerData[d.date].sd;\r\n\r\n\t\t\t\t\treturn yScale(avg - (sd * standardDeviations));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlineAverage.y(function (d) {\r\n\r\n\t\t\t\t\tvar avg = bollingerData[d.date].avg;\r\n\r\n\t\t\t\t\treturn yScale(avg);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar prunedData = [];\r\n\t\t\t\tfor (var n = movingAverage; n < data.length; ++n) {\r\n\t\t\t\t\tprunedData.push(data[n]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pathArea = d3.select(this).selectAll('.area')\r\n\t\t\t\t\t.data([prunedData]);\r\n\t\t\t\tvar pathUpper = d3.select(this).selectAll('.upper')\r\n\t\t\t\t\t.data([prunedData]);\r\n\t\t\t\tvar pathLower = d3.select(this).selectAll('.lower')\r\n\t\t\t\t\t.data([prunedData]);\r\n\t\t\t\tvar pathAverage = d3.select(this).selectAll('.average')\r\n\t\t\t\t\t.data([prunedData]);\r\n\r\n\t\t\t\tpathArea.enter().append('path');\r\n\t\t\t\tpathUpper.enter().append('path');\r\n\t\t\t\tpathLower.enter().append('path');\r\n\t\t\t\tpathAverage.enter().append('path');\r\n\r\n\t\t\t\tpathArea.attr('d', areaBands)\r\n\t\t\t\t\t.classed('area', true)\r\n\t\t\t\t\t.classed(cssBandArea, true);\r\n\t\t\t\tpathUpper.attr('d', lineUpper)\r\n\t\t\t\t\t.classed('upper', true)\r\n\t\t\t\t\t.classed(cssBandUpper, true);\r\n\t\t\t\tpathLower.attr('d', lineLower)\r\n\t\t\t\t\t.classed('lower', true)\r\n\t\t\t\t\t.classed(cssBandLower, true);\r\n\t\t\t\tpathAverage.attr('d', lineAverage)\r\n\t\t\t\t\t.classed('average', true)\r\n\t\t\t\t\t.classed(cssAverage, true);\r\n\r\n\t\t\t\tpathArea.exit().remove();\r\n\t\t\t\tpathUpper.exit().remove();\r\n\t\t\t\tpathLower.exit().remove();\r\n\t\t\t\tpathAverage.exit().remove();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tbollingerBands.xScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn xScale;\r\n\t\t\t}\r\n\t\t\txScale = value;\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.yScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yScale;\r\n\t\t\t}\r\n\t\t\tyScale = value;\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.yValue = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yValue;\r\n\t\t\t}\r\n\t\t\tyValue = value;\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.movingAverage = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn movingAverage;\r\n\t\t\t}\r\n\t\t\tif (value >= 0) {\r\n\t\t\t\tmovingAverage = value;\r\n\t\t\t}\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.standardDeviations = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn standardDeviations;\r\n\t\t\t}\r\n\t\t\tif (value >= 0) {\r\n\t\t\t\tstandardDeviations = value;\r\n\t\t\t}\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.cssBandUpper = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn cssBandUpper;\r\n\t\t\t}\r\n\t\t\tcssBandUpper = value;\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.cssBandLower = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn cssBandLower;\r\n\t\t\t}\r\n\t\t\tcssBandLower = value;\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.cssBandArea = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn cssBandArea;\r\n\t\t\t}\r\n\t\t\tcssBandArea = value;\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\tbollingerBands.cssAverage = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn cssAverage;\r\n\t\t\t}\r\n\t\t\tcssAverage = value;\r\n\t\t\treturn bollingerBands;\r\n\t\t};\r\n\r\n\t\treturn bollingerBands;\r\n\t};\r\n}(d3, fc));\r\n","(function (d3, fc) {\r\n\t'use strict';\r\n\r\n\tfc.indicators.movingAverage = function () {\r\n\r\n\t\tvar xScale = d3.time.scale(),\r\n\t\t\tyScale = d3.scale.linear(),\r\n\t\t\tyValue = 0,\r\n\t\t\taveragePoints = 5,\r\n\t\t\tcss = '';\r\n\r\n\t\tvar movingAverage = function (selection) {\r\n\t\t\tvar line = d3.svg.line();\r\n\t\t\tline.x(function (d) { return xScale(d.date); });\r\n\r\n\t\t\tselection.each(function (data) {\r\n\r\n\t\t\t\tif (!isNaN(parseFloat(yValue))) {\r\n\t\t\t\t\tline.y(yScale(yValue));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (averagePoints === 0) {\r\n\t\t\t\t\t\tline.y(function (d) { return yScale(d[yValue]); });\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tline.y(function (d, i) {\r\n\t\t\t\t\t\t\tvar count = Math.min(averagePoints, i + 1),\r\n\t\t\t\t\t\t\t    first = i + 1 - count;\r\n\r\n\t\t\t\t\t\t\tvar sum = 0;\r\n\t\t\t\t\t\t\tfor (var index = first; index <= i; ++index) {\r\n\t\t\t\t\t\t\t    sum += data[index][yValue];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar mean = sum / count;\r\n\r\n\t\t\t\t\t\t\treturn yScale(mean);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar path = d3.select(this).selectAll('.indicator')\r\n\t\t\t\t\t.data([data]);\r\n\r\n\t\t\t\tpath.enter().append('path');\r\n\r\n\t\t\t\tpath.attr('d', line)\r\n\t\t\t\t\t.classed('indicator', true)\r\n\t\t\t\t\t.classed(css, true);\r\n\r\n\t\t\t\tpath.exit().remove();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tmovingAverage.xScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn xScale;\r\n\t\t\t}\r\n\t\t\txScale = value;\r\n\t\t\treturn movingAverage;\r\n\t\t};\r\n\r\n\t\tmovingAverage.yScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yScale;\r\n\t\t\t}\r\n\t\t\tyScale = value;\r\n\t\t\treturn movingAverage;\r\n\t\t};\r\n\r\n\t\tmovingAverage.yValue = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yValue;\r\n\t\t\t}\r\n\t\t\tyValue = value;\r\n\t\t\treturn movingAverage;\r\n\t\t};\r\n\r\n\t\tmovingAverage.averagePoints = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn averagePoints;\r\n\t\t\t}\r\n\t\t\tif (value >= 0) {\r\n\t\t\taveragePoints = value;\r\n\t\t\t}\r\n\t\t\treturn movingAverage;\r\n\t\t};\r\n\r\n\t\tmovingAverage.css = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn css;\r\n\t\t\t}\r\n\t\t\tcss = value;\r\n\t\t\treturn movingAverage;\r\n\t\t};\r\n\r\n\t\treturn movingAverage;\r\n\t};\r\n}(d3, fc));\r\n","(function (d3, fc) {\r\n\t'use strict';\r\n\r\n\tfc.indicators.rsi = function () {\r\n\r\n\t\tvar xScale = d3.time.scale(),\r\n\t\t\tyScale = d3.scale.linear(),\r\n\t\t\tsamplePeriods = 14,\r\n\t\t\tupperMarker = 70,\r\n\t\t\tlowerMarker = 30,\r\n\t\t\tlambda = 1.0,\r\n\t\t\tcss = '';\r\n\r\n\t\tvar upper = null,\r\n\t\t\tcentre = null,\r\n\t\t\tlower = null;\r\n\r\n\t\tvar rsi = function (selection) {\r\n\r\n\t\t\tselection.selectAll('.marker').remove();\r\n\r\n\t\t\tupper = selection.append(\"line\")\r\n\t\t\t\t.attr('class', 'marker upper')\r\n\t\t\t\t.attr('x1', xScale.range()[0]) \r\n\t\t\t\t.attr('y1', yScale(upperMarker))\r\n\t\t\t\t.attr('x2', xScale.range()[1]) \r\n\t\t\t\t.attr('y2', yScale(upperMarker));\r\n\r\n\t\t\tcentre = selection.append('line')\r\n\t\t\t\t.attr('class', 'marker centre')\r\n\t\t\t\t.attr('x1', xScale.range()[0]) \r\n\t\t\t\t.attr('y1', yScale(50))\r\n\t\t\t\t.attr('x2', xScale.range()[1]) \r\n\t\t\t\t.attr('y2', yScale(50));\r\n\r\n\t\t\tlower = selection.append('line')\r\n\t\t\t\t.attr('class', 'marker lower')\r\n\t\t\t\t.attr('x1', xScale.range()[0]) \r\n\t\t\t\t.attr('y1', yScale(lowerMarker))\r\n\t\t\t\t.attr('x2', xScale.range()[1]) \r\n\t\t\t\t.attr('y2', yScale(lowerMarker));\r\n\r\n\t\t\tvar line = d3.svg.line();\r\n\t\t\tline.x(function (d) { return xScale(d.date); });\r\n\r\n\t\t\tselection.each(function (data) {\r\n\r\n\t\t\t\tif (samplePeriods === 0) {\r\n\t\t\t\t\tline.y(function (d) { return yScale(0); });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tline.y(function (d, i) {\r\n\t\t\t\t\t\tvar from = i - samplePeriods,\r\n\t\t\t\t\t\t\tto = i,\r\n\t\t\t\t\t\t\tup = [],\r\n\t\t\t\t\t\t\tdown = [];\r\n\r\n\t\t\t\t\t\tif (from < 1) {\r\n                            from = 1;\r\n                        }\r\n\r\n\t\t\t\t\t\tfor( var offset = to; offset >= from; offset--) {\r\n\t\t\t\t\t\t\tvar dnow = data[offset],\r\n\t\t\t\t\t\t\tdprev = data[offset-1];\r\n\r\n\t\t\t\t\t\t\tvar weight = Math.pow(lambda, offset);\r\n\t\t\t\t\t\t\tup.push(dnow.close > dprev.close ? (dnow.close - dprev.close) * weight : 0);\r\n\t\t\t\t\t\t\tdown.push(dnow.close < dprev.close ? (dprev.close - dnow.close) * weight : 0);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (up.length <= 0 || down.length <= 0) {\r\n                            return yScale(0);\r\n                        }\r\n\r\n\t\t\t\t\t\tvar rsi = 100 - (100/(1+(d3.mean(up)/d3.mean(down))));\r\n\t\t\t\t\t\treturn yScale(rsi);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar path = d3.select(this).selectAll('.rsi')\r\n\t\t\t\t\t.data([data]);\r\n\r\n\t\t\t\tpath.enter().append('path');\r\n\r\n\t\t\t\tpath.attr('d', line)\r\n\t\t\t\t\t.classed('rsi', true)\r\n\t\t\t\t\t.classed(css, true);\r\n\r\n\t\t\t\tpath.exit().remove();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\trsi.xScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn xScale;\r\n\t\t\t}\r\n\t\t\txScale = value;\r\n\t\t\treturn rsi;\r\n\t\t};\r\n\r\n\t\trsi.yScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yScale;\r\n\t\t\t}\r\n\t\t\tyScale = value;\r\n\t\t\treturn rsi;\r\n\t\t};\r\n\r\n\t\trsi.samplePeriods = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn samplePeriods;\r\n\t\t\t}\r\n\t\t\tsamplePeriods = value < 0 ? 0 : value;\r\n\t\t\treturn rsi;\r\n\t\t};\r\n\r\n\t\trsi.upperMarker = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn upperMarker;\r\n\t\t\t}\r\n\t\t\tupperMarker = value > 100 ? 100 : (value < 0 ? 0 : value);\r\n\t\t\treturn rsi;\r\n\t\t};\r\n\r\n\t\trsi.lowerMarker = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn lowerMarker;\r\n\t\t\t}\r\n\t\t\tlowerMarker = value > 100 ? 100 : (value < 0 ? 0 : value);\r\n\t\t\treturn rsi;\r\n\t\t};\r\n\r\n\t\trsi.lambda = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn lambda;\r\n\t\t\t}\r\n\t\t\tlambda = value > 1.0 ? 1.0 : (value < 0.0 ? 0.0 : value);\r\n\t\t\treturn rsi;\r\n\t\t};\r\n\r\n\t\trsi.css = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn css;\r\n\t\t\t}\r\n\t\t\tcss = value;\r\n\t\t\treturn rsi;\r\n\t\t};\r\n\r\n\t\treturn rsi;\r\n\t};\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    var weekday = fc.utilities.weekday;\r\n\r\n    fc.scale.finance = function () {\r\n        return financialScale();\r\n    };\r\n\r\n    function financialScale(linear) {\r\n\r\n    \tvar alignPixels = true;\r\n\r\n        if (!arguments.length) {\r\n            linear = d3.scale.linear();\r\n        }\r\n\r\n        function scale(x) {\r\n            var n = 0;\r\n            if (typeof x === 'number') {\r\n                // When scaling ticks.\r\n                n = linear(x);\r\n            } else {\r\n                // When scaling dates.\r\n                n = linear(weekday(x));\r\n            }\r\n        \tvar m = Math.round(n);\r\n            return alignPixels ? (n > m ? m + 0.5 : m - 0.5) : n;\r\n        }\r\n\r\n        scale.copy = function () {\r\n            return financialScale(linear.copy());\r\n        };\r\n\r\n        scale.domain = function (domain) {\r\n            if (!arguments.length) {\r\n                return linear.domain().map(weekday.invert);\r\n            }\r\n            if (typeof domain[0] === 'number') {\r\n                linear.domain(domain);\r\n            } else {\r\n                linear.domain(domain.map(weekday));\r\n            }\r\n            return scale;\r\n        };\r\n\r\n        scale.ticks = function (n) {\r\n            return arguments.length ? linear.ticks(n) : linear.ticks();\r\n        };\r\n\r\n        scale.tickFormat = function (count, f) {\r\n            return function(n) {\r\n                var date = weekday.invert(n);\r\n                return d3.time.format('%b %e')(date);\r\n            };\r\n        };\r\n\r\n        scale.invert = function (pixel) {\r\n            return weekday.invert(linear.invert(pixel));\r\n        };\r\n\r\n        scale.alignPixels = function (value) {\r\n            if (!arguments.length) {\r\n                return alignPixels;\r\n            }\r\n            alignPixels = value;\r\n            return scale;\r\n        };\r\n\r\n        return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\", \"nice\");\r\n    }\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.scale.gridlines = function () {\r\n\r\n        var xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear(),\r\n            xTicks = 10,\r\n            yTicks = 10;\r\n\r\n        var xLines = function (data, grid) {\r\n            var xlines = grid.selectAll('.x')\r\n                .data(data);\r\n            xlines\r\n                .enter().append('line')\r\n                .attr({\r\n                    'class': 'x',\r\n                    'x1': function(d) { return xScale(d);},\r\n                    'x2': function(d) { return xScale(d);},\r\n                    'y1': yScale.range()[0],\r\n                    'y2': yScale.range()[1]\r\n                });\r\n            xlines\r\n                .attr({\r\n                    'x1': function(d) { return xScale(d);},\r\n                    'x2': function(d) { return xScale(d);},\r\n                    'y1': yScale.range()[0],\r\n                    'y2': yScale.range()[1]\r\n                });\r\n            xlines.exit().remove();\r\n        };\r\n\r\n        var yLines = function (data, grid) {\r\n            var ylines = grid.selectAll('.y')\r\n                .data(data);\r\n            ylines\r\n                .enter().append('line')\r\n                .attr({\r\n                    'class': 'y',\r\n                    'x1': xScale.range()[0],\r\n                    'x2': xScale.range()[1],\r\n                    'y1': function(d) { return yScale(d);},\r\n                    'y2': function(d) { return yScale(d);}\r\n                });\r\n            ylines\r\n                .attr({\r\n                    'x1': xScale.range()[0],\r\n                    'x2': xScale.range()[1],\r\n                    'y1': function(d) { return yScale(d);},\r\n                    'y2': function(d) { return yScale(d);}\r\n                });\r\n            ylines.exit().remove();\r\n        };\r\n\r\n        var gridlines = function (selection) {\r\n            var grid, xTickData, yTickData;\r\n\r\n            selection.each(function () {\r\n                xTickData = xScale.ticks(xTicks);\r\n                yTickData = yScale.ticks(yTicks);\r\n\r\n                grid = d3.select(this).selectAll('.gridlines').data([[xTickData, yTickData]]);\r\n                grid.enter().append('g').classed('gridlines', true);\r\n                xLines(xTickData, grid);\r\n                yLines(yTickData, grid);\r\n            });\r\n        };\r\n\r\n        gridlines.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return gridlines;\r\n        };\r\n\r\n        gridlines.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return gridlines;\r\n        };\r\n\r\n        gridlines.xTicks = function (value) {\r\n            if (!arguments.length) {\r\n                return xTicks;\r\n            }\r\n            xTicks = value;\r\n            return gridlines;\r\n        };\r\n\r\n        gridlines.yTicks = function (value) {\r\n            if (!arguments.length) {\r\n                return yTicks;\r\n            }\r\n            yTicks = value;\r\n            return gridlines;\r\n        };\r\n\r\n        return gridlines;\r\n    };\r\n}(d3, fc));\r\n","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.scale.linear = function () {\r\n        return linearScale();\r\n    };\r\n\r\n    function linearScale(linear) {\r\n    \t\r\n    \tvar alignPixels = true;\r\n\r\n        if (!arguments.length) {\r\n            linear = d3.scale.linear();\r\n        }\r\n\r\n        function scale(x) {\r\n        \tvar n = linear(x);\r\n        \tvar m = Math.round(n);\r\n            return alignPixels ? (n > m ? m + 0.5 : m - 0.5) : n;\r\n        }\r\n\r\n        scale.copy = function () {\r\n            return linearScale(linear.copy());\r\n        };\r\n\r\n        scale.domain = function (domain) {\r\n            linear.domain(domain);\r\n            return scale;\r\n        };\r\n\r\n        scale.ticks = function (n) {\r\n            return linear.ticks(n);\r\n        };\r\n\r\n        scale.invert = function (pixel) {\r\n            return linear.invert(pixel);\r\n        };\r\n\r\n        scale.alignPixels = function (value) {\r\n            if (!arguments.length) {\r\n                return alignPixels;\r\n            }\r\n            alignPixels = value;\r\n            return scale;\r\n        };\r\n\r\n        return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\", \"nice\");\r\n    }\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.series.candlestick = function () {\r\n\r\n        var xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear();\r\n\r\n        var rectangleWidth = 5;\r\n\r\n        var isUpDay = function(d) {\r\n            return d.close > d.open;\r\n        };\r\n        var isDownDay = function (d) {\r\n            return !isUpDay(d);\r\n        };\r\n\r\n        var line = d3.svg.line()\r\n            .x(function (d) {\r\n                return d.x;\r\n            })\r\n            .y(function (d) {\r\n                return d.y;\r\n            });\r\n\r\n        var highLowLines = function (bars) {\r\n\r\n            var paths = bars.selectAll('.high-low-line').data(function (d) {\r\n                return [d];\r\n            });\r\n\r\n            paths.enter().append('path');\r\n\r\n            paths.classed('high-low-line', true)\r\n                .attr('d', function (d) {\r\n                    return line([\r\n                        { x: xScale(d.date), y: yScale(d.high) },\r\n                        { x: xScale(d.date), y: yScale(d.low) }\r\n                    ]);\r\n                });\r\n        };\r\n\r\n        var rectangles = function (bars) {\r\n            var rect;\r\n\r\n            rect = bars.selectAll('rect').data(function (d) {\r\n                return [d];\r\n            });\r\n\r\n            rect.enter().append('rect');\r\n\r\n            rect.attr('x', function (d) {\r\n                return xScale(d.date) - (rectangleWidth/2.0);\r\n            })\r\n                .attr('y', function (d) {\r\n                    return isUpDay(d) ? yScale(d.close) : yScale(d.open);\r\n                })\r\n                .attr('width', rectangleWidth)\r\n                .attr('height', function (d) {\r\n                    return isUpDay(d) ?\r\n                        yScale(d.open) - yScale(d.close) :\r\n                        yScale(d.close) - yScale(d.open);\r\n                });\r\n        };\r\n\r\n        var candlestick = function (selection) {\r\n            var series, bars;\r\n\r\n            selection.each(function (data) {\r\n                series = d3.select(this).selectAll('.candlestick-series').data([data]);\r\n\r\n                series.enter().append('g')\r\n                    .classed('candlestick-series', true);\r\n\r\n                bars = series.selectAll('.bar')\r\n                    .data(data, function (d) {\r\n                        return d.date;\r\n                    });\r\n\r\n                bars.enter()\r\n                    .append('g')\r\n                    .classed('bar', true);\r\n\r\n                bars.classed({\r\n                    'up-day': isUpDay,\r\n                    'down-day': isDownDay\r\n                });\r\n\r\n                highLowLines(bars);\r\n                rectangles(bars);\r\n\r\n                bars.exit().remove();\r\n\r\n\r\n            });\r\n        };\r\n\r\n        candlestick.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return candlestick;\r\n        };\r\n\r\n        candlestick.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return candlestick;\r\n        };\r\n\r\n        candlestick.rectangleWidth = function (value) {\r\n            if (!arguments.length) {\r\n                return rectangleWidth;\r\n            }\r\n            rectangleWidth = value;\r\n            return candlestick;\r\n        };\r\n\r\n        return candlestick;\r\n\r\n    };\r\n}(d3, fc));\r\n","// TODO where is yScaleTransform?\r\n(function (d3, fc, yScaleTransform) {\r\n    'use strict';\r\n\r\n    fc.series.comparison = function () {\r\n\r\n        var xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear();\r\n\r\n        var cachedData, cachedScale;\r\n\r\n        var findIndex = function (seriesData, date) {\r\n            var bisect = d3.bisector(\r\n                function (d) {\r\n                    return d.date;\r\n                }).left;\r\n\r\n            var initialIndex = bisect(seriesData, date);\r\n            if (!initialIndex) {\r\n                initialIndex += 1;\r\n            }\r\n            return initialIndex;\r\n        };\r\n\r\n        var percentageChange = function (seriesData, initialDate) {\r\n            var initialIndex = findIndex(seriesData, initialDate) - 1;\r\n            var initialClose = seriesData[initialIndex].close;\r\n\r\n            return seriesData.map(function (d) {\r\n                return {\r\n                    date: d.date,\r\n                    change: (d.close / initialClose) - 1\r\n                };\r\n            });\r\n        };\r\n\r\n        var rebaseChange = function (seriesData, initialDate) {\r\n            var initialIndex = findIndex(seriesData, initialDate) - 1;\r\n            var initialChange = seriesData[initialIndex].change;\r\n\r\n            return seriesData.map(function (d) {\r\n                return {\r\n                    date: d.date,\r\n                    change: d.change - initialChange\r\n                };\r\n            });\r\n        };\r\n\r\n         var calculateYDomain = function (data, xDomain) {\r\n            var start, end;\r\n\r\n            data = data.map(function (series) {\r\n                series = series.data;\r\n                start = findIndex(series,xDomain[0]) - 1;\r\n                end = findIndex(series,xDomain[1]) + 1;\r\n                return series.slice(start, end);\r\n            });\r\n\r\n            var allPoints = data.reduce(function(prev, curr) {\r\n                return prev.concat(curr);\r\n            }, []);\r\n\r\n            if (allPoints.length) {\r\n                return d3.extent(allPoints, function(d) {\r\n                    return d.change;\r\n                });\r\n            } else {\r\n                return [0, 0];\r\n            }\r\n        };\r\n\r\n        var color = d3.scale.category10();\r\n\r\n        var line = d3.svg.line()\r\n            .interpolate(\"linear\")\r\n            .x(function (d) {\r\n                return xScale(d.date);\r\n            })\r\n            .y(function (d) {\r\n                return yScale(d.change);\r\n            });\r\n\r\n        var comparison = function (selection) {\r\n            var series, lines;\r\n\r\n            selection.each(function (data) {\r\n\r\n                data = data.map(function (d) {\r\n                    return {\r\n                        name: d.name,\r\n                        data: percentageChange(d.data, xScale.domain()[0])\r\n                    };\r\n                });\r\n\r\n                cachedData = data; // Save for rebasing.\r\n\r\n                color.domain(data.map(function (d) {\r\n                    return d.name;\r\n                }));\r\n\r\n                yScale.domain(calculateYDomain(data, xScale.domain()));\r\n                cachedScale = yScale.copy();\r\n\r\n                series = d3.select(this).selectAll('.comparison-series').data([data]);\r\n                series.enter().append('g').classed('comparison-series', true);\r\n\r\n                lines = series.selectAll('.line')\r\n                    .data(data, function(d) {\r\n                        return d.name;\r\n                    })\r\n                    .enter().append(\"path\")\r\n                    .attr(\"class\", \"line\")\r\n                    .attr(\"d\", function (d) {\r\n                        return line(d.data);\r\n                    })\r\n                    .style(\"stroke\", function (d) {\r\n                        return color(d.name);\r\n                    });\r\n\r\n                series.selectAll('.line')\r\n                    .attr(\"d\", function (d) {\r\n                        return line(d.data);\r\n                    });\r\n            });\r\n        };\r\n\r\n        comparison.geometricZoom = function (selection, xTransformTranslate, xTransformScale) {\r\n            // Apply a transformation for each line to update its position wrt the new initial date,\r\n            // then apply the yScale transformation to reflect the updated yScale domain.\r\n\r\n            var initialIndex,\r\n                yTransform;\r\n\r\n            var lineTransform = function (initialChange) {\r\n                var yTransformLineTranslate = cachedScale(0) - cachedScale(initialChange);\r\n\r\n                yTransformLineTranslate *= yTransform.scale;\r\n                yTransformLineTranslate += yTransform.translate;\r\n\r\n                return 'translate(' + xTransformTranslate + ',' + yTransformLineTranslate + ')' +\r\n                    ' scale(' + xTransformScale + ',' + yTransform.scale + ')';\r\n            };\r\n\r\n            var domainData = cachedData.map(function (d) {\r\n                return {\r\n                    name: d.name,\r\n                    data: rebaseChange(d.data, xScale.domain()[0])\r\n                };\r\n            });\r\n\r\n            yScale.domain(calculateYDomain(domainData, xScale.domain()));\r\n            yTransform = yScaleTransform(cachedScale, yScale);\r\n\r\n            cachedData = cachedData.map(function (d) {\r\n                initialIndex = findIndex(d.data, xScale.domain()[0]) - 1;\r\n                return {\r\n                    name: d.name,\r\n                    data: d.data,\r\n                    transform: lineTransform(d.data[initialIndex].change)\r\n                };\r\n            });\r\n\r\n            selection.selectAll('.line')\r\n                .data(cachedData)\r\n                .attr('transform', function (d) { return d.transform; });\r\n        };\r\n\r\n        comparison.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return comparison;\r\n        };\r\n\r\n        comparison.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return comparison;\r\n        };\r\n\r\n        return comparison;\r\n    };\r\n}(d3, fc));","(function (d3, fc) {\r\n\t'use strict';\r\n\r\n\tfc.series.line = function () {\r\n\r\n\t\tvar yValue = 'close',\r\n\t\t\txScale = fc.scale.finance(),\r\n\t\t\tyScale = fc.scale.linear(),\r\n\t\t\tunderFill = true;\r\n\r\n\t\tvar line = function (selection) {\r\n\r\n\t\t\tvar area;\r\n\r\n\t\t\tif(underFill) {\r\n\t\t\t\tarea = d3.svg.area()\r\n\t\t\t      \t.x(function(d) { return xScale(d.date); })\r\n\t\t\t    \t.y0(yScale(0));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar line = d3.svg.line();\r\n\t\t\tline.x(function (d) { return xScale(d.date); });\r\n\r\n\t\t\tselection.each(function (data) {\r\n\r\n\t\t\t\tif(underFill) {\r\n\t\t\t\t\tarea.y1(function (d) { return yScale(d[yValue]); });\r\n\t\t\t\t\tvar areapath = d3.select(this).selectAll('.lineSeriesArea')\r\n\t\t\t\t\t\t.data([data]);\r\n\t\t\t\t\tareapath.enter()\r\n\t\t\t\t\t\t.append('path')\r\n\t\t\t\t\t\t.attr('d', area)\r\n\t\t\t\t\t\t.classed('lineSeriesArea', true);\r\n\t\t\t\t\tareapath.exit()\r\n\t\t\t\t\t\t.remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tline.y(function (d) { return yScale(d[yValue]); });\r\n\t\t\t\tvar linepath = d3.select(this).selectAll('.lineSeries')\r\n\t\t\t\t\t.data([data]);\r\n\t\t\t\tlinepath.enter()\r\n\t\t\t\t\t.append('path')\r\n\t\t\t\t\t.attr('d', line)\r\n\t\t\t\t\t.classed('lineSeries', true);\r\n\t\t\t\tlinepath.exit()\r\n\t\t\t\t\t.remove();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tline.yValue = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yValue;\r\n\t\t\t}\r\n\t\t\tyValue = value;\r\n\t\t\treturn line;\r\n\t\t};\r\n\r\n\t\tline.xScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn xScale;\r\n\t\t\t}\r\n\t\t\txScale = value;\r\n\t\t\treturn line;\r\n\t\t};\r\n\r\n\t\tline.yScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yScale;\r\n\t\t\t}\r\n\t\t\tyScale = value;\r\n\t\t\treturn line;\r\n\t\t};\r\n\r\n\t\tline.underFill = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn underFill;\r\n\t\t\t}\r\n\t\t\tunderFill = value;\r\n\t\t\treturn line;\r\n\t\t};\r\n\r\n\t\treturn line;\r\n\t};\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.series.ohlc = function (drawMethod) {\r\n\r\n        // Configurable attributes\r\n        var xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear(),\r\n            tickWidth = 5;\r\n\r\n        // Function to return\r\n        var ohlc;\r\n\r\n        // Accessor functions\r\n        var open = function (d) {\r\n                return yScale(d.open);\r\n            },\r\n            high = function (d) {\r\n                return yScale(d.high);\r\n            },\r\n            low = function (d) {\r\n                return yScale(d.low);\r\n            },\r\n            close = function (d) {\r\n                return yScale(d.close);\r\n            },\r\n            date = function (d) {\r\n                return xScale(d.date);\r\n            };\r\n\r\n        // Up/down day logic\r\n        var isUpDay = function(d) {\r\n            return d.close > d.open;\r\n        };\r\n        var isDownDay = function (d) {\r\n            return d.close < d.open;\r\n        };\r\n        var isStaticDay = function (d) {\r\n            return d.close === d.open;\r\n        };\r\n\r\n        var barColour = function(d) {\r\n            if (isUpDay(d)) {\r\n                return 'green';\r\n            } else if (isDownDay(d)) {\r\n                return 'red';\r\n            } else {\r\n                return 'black';\r\n            }\r\n        };\r\n\r\n        // Path drawing\r\n        var makeBarPath = function (d) {\r\n            var moveToLow = 'M' + date(d) + ',' + low(d),\r\n                verticalToHigh = 'V' + high(d),\r\n                openTick = 'M' + date(d) + \",\" + open(d) + 'h' + (-tickWidth),\r\n                closeTick = 'M' + date(d) + \",\" + close(d) + 'h' + tickWidth;\r\n            return moveToLow + verticalToHigh + openTick + closeTick;\r\n        };\r\n\r\n        var makeConcatPath = function (data) {\r\n            var path = 'M0,0';\r\n            data.forEach(function (d) {\r\n                path += makeBarPath(d);\r\n            });\r\n            return path;\r\n        };\r\n\r\n        // Filters data, and draws a series of ohlc bars from the result as a single path.\r\n        var makeConcatPathElement = function(series, elementClass, colour, data, filterFunction) {\r\n            var concatPath;\r\n            var filteredData = data.filter(function (d) {\r\n                return filterFunction(d);\r\n            });\r\n            concatPath = series.selectAll('.' + elementClass)\r\n                .data([filteredData]);\r\n\r\n            concatPath.enter()\r\n                .append('path')\r\n                .classed(elementClass, true);\r\n\r\n            concatPath\r\n                .attr('d', makeConcatPath(filteredData))\r\n                .attr('stroke', colour);\r\n\r\n\r\n            concatPath.exit().remove();\r\n        };\r\n\r\n        // Common series element\r\n        var makeSeriesElement = function (selection, data) {\r\n            var series = d3.select(selection).selectAll('.ohlc-series').data([data]);\r\n            series.enter().append('g').classed('ohlc-series', true);\r\n            return series;\r\n        };\r\n\r\n        // Draw ohlc bars as groups of svg lines\r\n        var ohlcLineGroups = function (selection) {\r\n            selection.each(function (data) {\r\n                var series = makeSeriesElement(this, data);\r\n\r\n                var bars = series.selectAll('.bar')\r\n                    .data(data, function (d) {\r\n                        return d.date;\r\n                    });\r\n\r\n                // Enter\r\n                var barEnter = bars.enter().append('g').classed('bar', true);\r\n                barEnter.append('line').classed('high-low-line', true);\r\n                barEnter.append('line').classed('open-tick', true);\r\n                barEnter.append('line').classed('close-tick', true);\r\n\r\n                // Update\r\n                bars.classed({\r\n                    'up-day': isUpDay,\r\n                    'down-day': isDownDay,\r\n                    'static-day': isStaticDay\r\n                });\r\n\r\n                bars.attr('stroke', barColour);\r\n\r\n                bars.select('.high-low-line').attr({x1: date, y1: low, x2: date, y2: high });\r\n                bars.select('.open-tick').attr({\r\n                    x1: function (d) { return date(d) - tickWidth; },\r\n                    y1: open,\r\n                    x2: date,\r\n                    y2: open\r\n                });\r\n                bars.select('.close-tick').attr({\r\n                    x1: date,\r\n                    y1: close,\r\n                    x2: function (d) { return date(d) + tickWidth; },\r\n                    y2: close\r\n                });\r\n\r\n                // Exit\r\n                bars.exit().remove();\r\n            });\r\n        };\r\n\r\n        // Draw ohlc bars as svg paths\r\n        var ohlcBarPaths = function (selection) {\r\n            selection.each(function (data) {\r\n                var series = makeSeriesElement(this, data);\r\n\r\n                var bars = series.selectAll('.bar')\r\n                    .data(data, function (d) {\r\n                        return d.date;\r\n                    });\r\n\r\n                bars.enter()\r\n                    .append('path')\r\n                    .classed('bar', true);\r\n\r\n                bars.classed({\r\n                    'up-day': isUpDay,\r\n                    'down-day': isDownDay,\r\n                    'static-day': isStaticDay\r\n                });\r\n\r\n                bars.attr({\r\n                    'stroke': barColour,\r\n                    'd': makeBarPath\r\n                });\r\n\r\n                bars.exit().remove();\r\n            });\r\n        };\r\n\r\n        // Draw the complete series of ohlc bars using 3 paths\r\n        var ohlcConcatBarPaths = function (selection) {\r\n            selection.each(function (data) {\r\n                var series = makeSeriesElement(this, data);\r\n                makeConcatPathElement(series, 'up-days', 'green', data, isUpDay);\r\n                makeConcatPathElement(series, 'down-days', 'red' ,data, isDownDay);\r\n                makeConcatPathElement(series, 'static-days', 'black', data, isStaticDay);\r\n            });\r\n        };\r\n\r\n        switch (drawMethod) {\r\n            case 'line': ohlc = ohlcLineGroups; break;\r\n            case 'path': ohlc = ohlcBarPaths; break;\r\n            case 'paths': ohlc = ohlcConcatBarPaths; break;\r\n            default: ohlc = ohlcBarPaths;\r\n        }\r\n\r\n        ohlc.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return ohlc;\r\n        };\r\n\r\n        ohlc.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return ohlc;\r\n        };\r\n\r\n        ohlc.tickWidth = function (value) {\r\n            if (!arguments.length) {\r\n                return tickWidth;\r\n            }\r\n            tickWidth = value;\r\n            return ohlc;\r\n        };\r\n\r\n        return ohlc;\r\n    };\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.series.volume = function () {\r\n\r\n        var xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear(),\r\n            barWidth = 5,\r\n            yValue = 'volume';\r\n\r\n        var isUpDay = function(d) {\r\n            return d.close > d.open;\r\n        };\r\n        var isDownDay = function (d) {\r\n            return !isUpDay(d);\r\n        };\r\n\r\n        var rectangles = function (bars) {\r\n            var rect;\r\n\r\n            rect = bars.selectAll('rect').data(function (d) {\r\n                return [d];\r\n            });\r\n\r\n            rect.enter().append('rect');\r\n\r\n            rect.attr('x', function (d) { return xScale(d.date) - (barWidth/2.0); })\r\n                .attr('y', function(d) { return yScale(d[yValue]); } )\r\n                .attr('width', barWidth)\r\n                .attr('height', function(d) { return yScale(0) - yScale(d.volume); });\r\n        };\r\n\r\n        var volume = function (selection) {\r\n            var series, bars;\r\n\r\n            selection.each(function (data) {\r\n                series = d3.select(this).selectAll('.volume-series').data([data]);\r\n\r\n                series.enter().append('g')\r\n                    .classed('volume-series', true);\r\n\r\n                bars = series.selectAll('.volumebar')\r\n                    .data(data, function (d) {\r\n                        return d.date;\r\n                    });\r\n\r\n                bars.enter()\r\n                    .append('g')\r\n                    .classed('volumebar', true);\r\n\r\n                bars.classed({\r\n                    'up-day': isUpDay,\r\n                    'down-day': isDownDay\r\n                });\r\n                rectangles(bars);\r\n                bars.exit().remove();\r\n           });\r\n        };\r\n\r\n        volume.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return volume;\r\n        };\r\n\r\n        volume.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return volume;\r\n        };\r\n\r\n        volume.barWidth = function (value) {\r\n            if (!arguments.length) {\r\n                return barWidth;\r\n            }\r\n            barWidth = value;\r\n            return volume;\r\n        };\r\n\r\n        volume.yValue = function (value) {\r\n            if (!arguments.length) {\r\n                return yValue;\r\n            }\r\n            yValue = value;\r\n            return volume;\r\n        };\r\n\r\n        return volume;\r\n    };\r\n}(d3, fc));\r\n","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.tools.annotation = function () {\r\n\r\n        var index = 0,\r\n            xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear(),\r\n            yLabel = '',\r\n            yValue = 0,\r\n            padding = 2,\r\n            formatCallout = function(d) { return d; };\r\n\r\n        var root = null,\r\n            line = null,\r\n            callout = null;\r\n\r\n        var annotation = function (selection) {\r\n\r\n            root = selection.append('g')\r\n                .attr('id', 'annotation_' + index)\r\n                .attr('class', 'annotation');\r\n\r\n            line = root.append(\"line\")\r\n                .attr('class', 'marker')\r\n                .attr('x1', xScale.range()[0]) \r\n                .attr('y1', yScale(yValue))\r\n                .attr('x2', xScale.range()[1]) \r\n                .attr('y2', yScale(yValue));\r\n\r\n\r\n            callout = root.append(\"text\")\r\n                .attr('class', 'callout')\r\n                .attr('x', xScale.range()[1] - padding)\r\n                .attr('y', yScale(yValue) - padding)\r\n                .attr('style', 'text-anchor: end;')\r\n                .text(yLabel + \": \" + formatCallout(yValue));\r\n        };\r\n\r\n        annotation.index = function (value) {\r\n            if (!arguments.length) {\r\n                return index;\r\n            }\r\n            index = value;\r\n            return annotation;\r\n        };\r\n\r\n        annotation.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return annotation;\r\n        };\r\n\r\n        annotation.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return annotation;\r\n        };\r\n\r\n        annotation.yValue = function (value) {\r\n            if (!arguments.length) {\r\n                return yValue;\r\n            }\r\n            yValue = value;\r\n            return annotation;\r\n        };\r\n\r\n        annotation.yLabel = function (value) {\r\n            if (!arguments.length) {\r\n                return yLabel;\r\n            }\r\n            yLabel = value;\r\n            return annotation;\r\n        };\r\n\r\n        annotation.padding = function (value) {\r\n            if (!arguments.length) {\r\n                return padding;\r\n            }\r\n            padding = value;\r\n            return annotation;\r\n        };\r\n\r\n        annotation.formatCallout = function (value) {\r\n            if (!arguments.length) {\r\n                return formatCallout;\r\n            }\r\n            formatCallout = value;\r\n            return annotation;\r\n        };\r\n\r\n        return annotation;\r\n    };\r\n}(d3, fc));","(function (d3, fc) {\r\n\t\t'use strict';\r\n\r\n\t\tfc.tools.callouts = function () {\r\n\r\n\t\tvar xScale = d3.time.scale(),\r\n\t\t\tyScale = d3.scale.linear(),\r\n\t\t\tpadding = 5,\r\n\t\t\tspacing = 5,\r\n\t\t\trounded = 0,\r\n\t\t\trotationStart = 20,\r\n\t\t\trotationSteps = 20,\r\n\t\t\tstalkLength = 50,\r\n\t\t\tcss = 'callout',\r\n\t\t\tdata = [];\r\n\r\n\t\tvar currentBB = null,\r\n\t\t\tboundingBoxes = [],\r\n\t\t\tcurrentRotation = 0;\r\n\r\n\t\tvar rectanglesIntersect = function(r1, r2) {\r\n\t\t\treturn !(r2.left > r1.right || \r\n\t\t\t\tr2.right < r1.left || \r\n\t\t\t\tr2.top > r1.bottom ||\r\n\t\t\t\tr2.bottom < r1.top);\r\n\t\t};\r\n\r\n\t\tvar arrangeCallouts = function() {\r\n\r\n\t\t\tif (!boundingBoxes) {\r\n                return;\r\n            }\r\n\r\n\t\t\tvar sortedRects = boundingBoxes.sort(function(a,b) {\r\n\t\t\t\tif (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n\t\t\t\tif (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\tcurrentRotation = rotationStart;\r\n\t\t\tfor(var i=0; i<sortedRects.length; i++) {\r\n\r\n\t\t\t\t// Calculate the x and y components of the stalk\r\n\t\t\t\tvar offsetX = stalkLength * Math.sin(currentRotation * (Math.PI/180));\r\n\t\t\t\tsortedRects[i].x += offsetX;\r\n\t\t\t\tvar offsetY = stalkLength * Math.cos(currentRotation * (Math.PI/180));\r\n\t\t\t\tsortedRects[i].y -= offsetY;\r\n\r\n\t\t\t\tcurrentRotation += rotationSteps;\r\n\t\t\t}\r\n\r\n\t\t\t// Tree sorting algo (Sudo code below)\r\n\t\t\tfor(var r1=0; r1<sortedRects.length; r1++ ){\r\n\t\t\t\tfor(var r2=r1+1; r2<sortedRects.length; r2++) {\r\n\r\n\t\t\t\t\tif( !sortedRects[r1].left ) {\r\n\t\t\t\t\t\tsortedRects[r1].left = function() { return this.x - padding; };\r\n\t\t\t\t\t\tsortedRects[r1].right = function() { return this.x + this.width + padding; };\r\n\t\t\t\t\t\tsortedRects[r1].bottom = function() { return this.y + this.height + padding; };\r\n\t\t\t\t\t\tsortedRects[r1].top = function() { return this.y - padding; };\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( !sortedRects[r2].left ) {\r\n\t\t\t\t\t\tsortedRects[r2].left = function() { return this.x - padding; };\r\n\t\t\t\t\t\tsortedRects[r2].right = function() { return this.x + this.width + padding; };\r\n\t\t\t\t\t\tsortedRects[r2].bottom = function() { return this.y + this.height + padding; };\r\n\t\t\t\t\t\tsortedRects[r2].top = function() { return this.y - padding; };\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(rectanglesIntersect(sortedRects[r1], sortedRects[r2])) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Find the smallest move to correct the overlap\r\n\t\t\t\t\t\tvar smallest = 0; // 0=left, 1=right, 2=down\r\n\t\t\t\t\t\tvar left = sortedRects[r2].right() - sortedRects[r1].left();\r\n\t\t\t\t\t\tvar right = sortedRects[r1].right() - sortedRects[r2].left();\r\n\t\t\t\t\t\tif (right < left) {\r\n                            smallest = 1;\r\n                        }\r\n\t\t\t\t\t\tvar down = sortedRects[r1].bottom() - sortedRects[r2].top();\r\n\t\t\t\t\t\tif (down < right && down < left) {\r\n                            smallest = 2;\r\n                        }\r\n\r\n\t\t\t\t\t\tif (smallest === 0) {\r\n                            sortedRects[r2].x -= (left + spacing);\r\n                        }\r\n\t\t\t\t\t\telse if (smallest === 1) {\r\n                            sortedRects[r2].x += (right + spacing);\r\n                        }\r\n\t\t\t\t\t\telse if (smallest === 2) {\r\n                            sortedRects[r2].y += (down + spacing);\r\n                        }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tboundingBoxes = sortedRects;\r\n\t\t};\r\n\r\n\t\tvar callouts = function (selection) {\r\n\r\n\t\t\t// Create the callouts\r\n\t\t\tvar callouts = selection.selectAll('g')\r\n\t\t\t\t.data(data)\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append('g')\r\n\t\t\t\t.attr('transform', function(d) { return 'translate(' + xScale(d.x) + ',' + yScale(d.y) +')'; })\r\n\t\t\t\t.attr('class', function(d) { return d.css ? d.css : css; });\r\n\r\n\t\t\t// Create the text elements\r\n\t\t\tcallouts.append('text')\r\n\t\t\t\t.attr('style', 'text-anchor: left;')\r\n\t\t\t\t.text(function(d) { return d.label; });\r\n\r\n\t\t\t// Create the rectangles behind\r\n\t\t\tcallouts.insert('rect',':first-child')\r\n\t\t\t\t.attr('x', function(d) { return -padding - rounded; })\r\n\t\t\t\t.attr('y', function(d) { \r\n\t\t\t\t\tcurrentBB = this.parentNode.getBBox();\r\n\t\t\t\t\tcurrentBB.x = xScale(d.x); \r\n\t\t\t\t\tcurrentBB.y = yScale(d.y); \r\n\t\t\t\t\tboundingBoxes.push(currentBB); \r\n\t\t\t\t\treturn -currentBB.height; \r\n\t\t\t\t})\r\n\t\t\t\t.attr('width', function(d) { return currentBB.width + (padding*2) + (rounded*2); })\r\n\t\t\t\t.attr('height', function(d) { return currentBB.height + (padding*2); })\r\n\t\t\t\t.attr('rx', rounded)\r\n\t\t\t\t.attr('ry', rounded);\r\n\r\n\t\t\t// Arrange callout\r\n\t\t\tarrangeCallouts();\r\n\t\t\tvar index = 0;\r\n\t\t\tcallouts.attr('transform', function(d) { \r\n\t\t\t\treturn 'translate(' + boundingBoxes[index].x + ',' + boundingBoxes[index++].y +')';\r\n\t\t\t});\r\n\r\n\t\t\tcallouts = selection.selectAll('g')\r\n\t\t\t.data(data)\r\n\t\t\t.exit();\r\n\t\t};\r\n\r\n\t\tcallouts.addCallout = function (value) {\r\n\t\tdata.push(value);\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.xScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn xScale;\r\n\t\t\t}\r\n\t\t\txScale = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.yScale = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn yScale;\r\n\t\t\t}\r\n\t\t\tyScale = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.padding = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn padding;\r\n\t\t\t}\r\n\t\t\tpadding = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.spacing = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn spacing;\r\n\t\t\t}\r\n\t\t\tspacing = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.rounded = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn rounded;\r\n\t\t\t}\r\n\t\t\trounded = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.stalkLength = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn stalkLength;\r\n\t\t\t}\r\n\t\t\tstalkLength = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.rotationStart = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn rotationStart;\r\n\t\t\t}\r\n\t\t\trotationStart = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.rotationSteps = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn rotationSteps;\r\n\t\t\t}\r\n\t\t\trotationSteps = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\tcallouts.css = function (value) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\treturn css;\r\n\t\t\t}\r\n\t\t\tcss = value;\r\n\t\t\treturn callouts;\r\n\t\t};\r\n\r\n\t\treturn callouts;\r\n\t};\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\nfc.tools.crosshairs = function () {\r\n\r\n    var target = null,\r\n        series = null,\r\n        xScale = d3.time.scale(),\r\n        yScale = d3.scale.linear(),\r\n        yValue = null,\r\n        formatH = null,\r\n        formatV = null,\r\n        active = true,\r\n        freezable = true,\r\n        padding = 2,\r\n        onSnap = null;\r\n\r\n    var lineH = null,\r\n        lineV = null,\r\n        circle = null,\r\n        calloutH = null,\r\n        calloutV = null;\r\n\r\n    var highlight = null,\r\n        highlightedField = null;\r\n\r\n    var crosshairs = function () {\r\n\r\n        var root = target.append('g')\r\n            .attr('class', 'crosshairs');\r\n\r\n        lineH = root.append(\"line\")\r\n            .attr('class', 'crosshairs horizontal')\r\n            .attr('x1', xScale.range()[0])\r\n            .attr('x2', xScale.range()[1])\r\n            .attr('display', 'none');\r\n\r\n        lineV = root.append(\"line\")\r\n            .attr('class', 'crosshairs vertical')\r\n            .attr('y1', yScale.range()[0])\r\n            .attr('y2', yScale.range()[1])\r\n            .attr('display', 'none');\r\n\r\n        circle = root.append(\"circle\")\r\n            .attr('class', 'crosshairs circle')\r\n            .attr('r', 6)\r\n            .attr('display', 'none');\r\n\r\n        calloutH = root.append(\"text\")\r\n            .attr('class', 'crosshairs callout horizontal')\r\n            .attr('x', xScale.range()[1] - padding)\r\n            .attr('style', 'text-anchor: end')\r\n            .attr('display', 'none');\r\n\r\n        calloutV = root.append(\"text\")\r\n            .attr('class', 'crosshairs callout vertical')\r\n            .attr('y', '1em')\r\n            .attr('style', 'text-anchor: end')\r\n            .attr('display', 'none');\r\n    };\r\n\r\n    function mousemove() {\r\n\r\n        if (active) {\r\n            crosshairs.update();\r\n        }\r\n    }\r\n\r\n    function mouseout() {\r\n\r\n        if (active) {\r\n            crosshairs.clear();\r\n        }\r\n    }\r\n\r\n    function mouseclick() {\r\n\r\n        if (freezable) {\r\n            crosshairs.active(!active);\r\n        }\r\n    }\r\n\r\n    function findNearest(xTarget) {\r\n\r\n        var nearest = null,\r\n            dx = Number.MAX_VALUE;\r\n\r\n        series.forEach(function(data) {\r\n\r\n            var xDiff = Math.abs(xTarget.getTime() - data.date.getTime());\r\n\r\n            if (xDiff < dx) {\r\n                dx = xDiff;\r\n                nearest = data;\r\n            }\r\n        });\r\n\r\n        return nearest;\r\n    }\r\n\r\n    function findField(yTarget, data) {\r\n\r\n        var field = null;\r\n\r\n        var minDiff = Number.MAX_VALUE;\r\n        for (var property in data) {\r\n            if (data.hasOwnProperty(property) && (property !== 'date')) {\r\n                var dy = Math.abs(yTarget - data[property]);\r\n                if (dy <= minDiff) {\r\n                    minDiff = dy;\r\n                    field = property;\r\n                }\r\n            }\r\n        }\r\n\r\n        return field;\r\n    }\r\n\r\n    function redraw() {\r\n\r\n        var x = xScale(highlight.date),\r\n            y = yScale(highlight[highlightedField]);\r\n\r\n        lineH.attr('y1', y)\r\n            .attr('y2', y);\r\n        lineV.attr('x1', x)\r\n            .attr('x2', x);\r\n        circle.attr('cx', x)\r\n            .attr('cy', y);\r\n        calloutH.attr('y', y - padding)\r\n            .text(formatH(highlight[highlightedField], highlightedField));\r\n        calloutV.attr('x', x - padding)\r\n            .text(formatV(highlight.date));\r\n\r\n        lineH.attr('display', 'inherit');\r\n        lineV.attr('display', 'inherit');\r\n        circle.attr('display', 'inherit');\r\n        calloutH.attr('display', 'inherit');\r\n        calloutV.attr('display', 'inherit');\r\n    }\r\n\r\n    crosshairs.update = function() {\r\n\r\n        if (!active) {\r\n\r\n            redraw();\r\n\r\n        } else {\r\n\r\n            var mouse = [0, 0];\r\n            try {\r\n                mouse = d3.mouse(target[0][0]);\r\n            }\r\n            catch (exception) {\r\n                // Mouse is elsewhere\r\n            }\r\n\r\n            var xMouse = xScale.invert(mouse[0]),\r\n                yMouse = yScale.invert(mouse[1]),\r\n                nearest = findNearest(xMouse);\r\n\r\n            if (nearest !== null) {\r\n\r\n                var field = null;\r\n                if (nearest[yValue]) {\r\n                    field = yValue;\r\n                } else {\r\n                    field = findField(yMouse, nearest);\r\n                }\r\n\r\n                if ((nearest !== highlight) || (field !== highlightedField)) {\r\n\r\n                    highlight = nearest;\r\n                    highlightedField = field;\r\n\r\n                    redraw();\r\n                    if (onSnap) {\r\n                        onSnap(highlight);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    crosshairs.clear = function() {\r\n\r\n        highlight = null;\r\n        highlightedField = null;\r\n\r\n        lineH.attr('display', 'none');\r\n        lineV.attr('display', 'none');\r\n        circle.attr('display', 'none');\r\n        calloutH.attr('display', 'none');\r\n        calloutV.attr('display', 'none');\r\n    };\r\n\r\n    crosshairs.target = function (value) {\r\n        if (!arguments.length) {\r\n            return target;\r\n        }\r\n\r\n        if (target) {\r\n\r\n            target.on('mousemove.crosshairs', null);\r\n            target.on('mouseout.crosshairs', null);\r\n            target.on('click.crosshairs', null);\r\n        }\r\n\r\n        target = value;\r\n\r\n        target.on('mousemove.crosshairs', mousemove);\r\n        target.on('mouseout.crosshairs', mouseout);\r\n        target.on('click.crosshairs', mouseclick);\r\n\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.series = function (value) {\r\n        if (!arguments.length) {\r\n            return series;\r\n        }\r\n        series = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.xScale = function (value) {\r\n        if (!arguments.length) {\r\n            return xScale;\r\n        }\r\n        xScale = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.yScale = function (value) {\r\n        if (!arguments.length) {\r\n            return yScale;\r\n        }\r\n        yScale = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.yValue = function (value) {\r\n        if (!arguments.length) {\r\n            return yValue;\r\n        }\r\n        yValue = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.formatH = function (value) {\r\n        if (!arguments.length) {\r\n            return formatH;\r\n        }\r\n        formatH = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.formatV = function (value) {\r\n        if (!arguments.length) {\r\n            return formatV;\r\n        }\r\n        formatV = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.active = function (value) {\r\n        if (!arguments.length) {\r\n            return active;\r\n        }\r\n        active = value;\r\n\r\n        lineH.classed('frozen', !active);\r\n        lineV.classed('frozen', !active);\r\n        circle.classed('frozen', !active);\r\n\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.freezable = function (value) {\r\n        if (!arguments.length) {\r\n            return freezable;\r\n        }\r\n        freezable = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.padding = function (value) {\r\n        if (!arguments.length) {\r\n            return padding;\r\n        }\r\n        padding = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.onSnap = function (value) {\r\n        if (!arguments.length) {\r\n            return onSnap;\r\n        }\r\n        onSnap = value;\r\n        return crosshairs;\r\n    };\r\n\r\n    crosshairs.highlightedPoint = function() {\r\n        return highlight;\r\n    };\r\n\r\n    crosshairs.highlightedField = function() {\r\n        return highlightedField;\r\n    };\r\n\r\n    return crosshairs;\r\n};\r\n\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.tools.fibonacciFan = function () {\r\n\r\n        var target = null,\r\n            series = null,\r\n            xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear(),\r\n            active = true;\r\n\r\n        var circleOrigin = null,\r\n            circleTarget = null,\r\n            lineSource = null,\r\n            lineA = null,\r\n            lineB = null,\r\n            lineC = null,\r\n            fanArea = null;\r\n\r\n        var phase = 1,\r\n            locationOrigin = null,\r\n            locationTarget = null;\r\n\r\n        var fibonacciFan = function () {\r\n\r\n            var root = target.append('g')\r\n                .attr('class', 'fibonacci-fan');\r\n\r\n            circleOrigin = root.append(\"circle\")\r\n                .attr('class', 'fibonacci-fan origin')\r\n                .attr('r', 6)\r\n                .attr('display', 'none');\r\n\r\n            circleTarget = root.append(\"circle\")\r\n                .attr('class', 'fibonacci-fan target')\r\n                .attr('r', 6)\r\n                .attr('display', 'none');\r\n\r\n            lineSource = root.append(\"line\")\r\n                .attr('class', 'fibonacci-fan source')\r\n                .attr('display', 'none');\r\n\r\n            lineA = root.append(\"line\")\r\n                .attr('class', 'fibonacci-fan a')\r\n                .attr('display', 'none');\r\n\r\n            lineB = root.append(\"line\")\r\n                .attr('class', 'fibonacci-fan b')\r\n                .attr('display', 'none');\r\n\r\n            lineC = root.append(\"line\")\r\n                .attr('class', 'fibonacci-fan c')\r\n                .attr('display', 'none');\r\n\r\n            fanArea = root.append(\"polygon\")\r\n                .attr('class', 'fibonacci-fan area')\r\n                .attr('display', 'none');\r\n        };\r\n\r\n        function mousemove() {\r\n\r\n            if (!active) {\r\n                return;\r\n            }\r\n\r\n            switch (phase) {\r\n                case 1: {\r\n                    locationOrigin = findLocation();\r\n                    if (locationOrigin) {\r\n                        fibonacciFan.update();\r\n                        circleOrigin.attr('display', 'inherit');\r\n                    }\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    locationTarget = findLocation();\r\n                    if (locationTarget) {\r\n                        fibonacciFan.update();\r\n                        circleTarget.attr('display', 'inherit');\r\n                        lineSource.attr('display', 'inherit');\r\n                    }\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function mouseclick() {\r\n\r\n            if (!active) {\r\n                return;\r\n            }\r\n\r\n            switch (phase) {\r\n                case 1: {\r\n\r\n                    phase = 2;\r\n                    break;\r\n                }\r\n                case 2: {\r\n\r\n                    setFan();\r\n\r\n                    phase = 3;\r\n                    break;\r\n                }\r\n                case 3: {\r\n\r\n                    clearAll();\r\n\r\n                    phase = 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function findLocation() {\r\n\r\n            var mouse = [0, 0];\r\n            try {\r\n                mouse = d3.mouse(target[0][0]);\r\n            }\r\n            catch (exception) {\r\n                // Mouse is elsewhere\r\n            }\r\n\r\n            var xMouse = xScale.invert(mouse[0]),\r\n                yMouse = yScale.invert(mouse[1]),\r\n                point = findPoint(xMouse);\r\n\r\n            if (point !== null) {\r\n\r\n                var field = findField(yMouse, point);\r\n\r\n                if (field !== null) {\r\n\r\n                    return { point: point, field: field };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        function findPoint(xTarget) {\r\n\r\n            var nearest = null,\r\n                dx = Number.MAX_VALUE;\r\n\r\n            series.forEach(function(data) {\r\n\r\n                var xDiff = Math.abs(xTarget.getTime() - data.date.getTime());\r\n\r\n                if (xDiff < dx) {\r\n                    dx = xDiff;\r\n                    nearest = data;\r\n                }\r\n            });\r\n\r\n            return nearest;\r\n        }\r\n\r\n        function findField(yTarget, data) {\r\n\r\n            var field = null;\r\n\r\n            var minDiff = Number.MAX_VALUE;\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property) && (property !== 'date')) {\r\n                    var dy = Math.abs(yTarget - data[property]);\r\n                    if (dy <= minDiff) {\r\n                        minDiff = dy;\r\n                        field = property;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return field;\r\n        }\r\n\r\n        function setFan() {\r\n\r\n            if (xScale(locationOrigin.point.date) > xScale(locationTarget.point.date)) {\r\n                var tmp = locationOrigin;\r\n                locationOrigin = locationTarget;\r\n                locationTarget = tmp;\r\n            }\r\n\r\n            var originX = xScale(locationOrigin.point.date),\r\n                originY = yScale(locationOrigin.point[locationOrigin.field]),\r\n                targetX = xScale(locationTarget.point.date),\r\n                targetY = yScale(locationTarget.point[locationTarget.field]),\r\n                finalX = xScale.range()[1],\r\n                finalY = calculateY(originX, originY, targetX, targetY, finalX);\r\n\r\n            if (finalY) {\r\n\r\n                setFanLines(originX, originY, finalX, finalY.source, finalY.source, finalY.source);\r\n\r\n                lineA.attr('display', 'inherit');\r\n                lineB.attr('display', 'inherit');\r\n                lineC.attr('display', 'inherit');\r\n                fanArea.attr('display', 'inherit');\r\n\r\n                var pointsFinal = originX + ',' + originY\r\n                    + ' ' + finalX + ',' + finalY.a\r\n                    + ' ' + finalX + ',' + finalY.c;\r\n\r\n                lineA.transition()\r\n                    .attr('y2', finalY.a);\r\n                lineB.transition()\r\n                    .attr('y2', finalY.b);\r\n                lineC.transition()\r\n                    .attr('y2', finalY.c);\r\n                fanArea.transition()\r\n                    .attr('points', pointsFinal);\r\n            }\r\n\r\n            circleOrigin.attr('display', 'none');\r\n            circleTarget.attr('display', 'none');\r\n        }\r\n\r\n        function clearAll() {\r\n\r\n            locationOrigin = null;\r\n            locationTarget = null;\r\n\r\n            circleOrigin.attr('display', 'none');\r\n            circleTarget.attr('display', 'none');\r\n            lineSource.attr('display', 'none');\r\n            lineA.attr('display', 'none');\r\n            lineB.attr('display', 'none');\r\n            lineC.attr('display', 'none');\r\n            fanArea.attr('display', 'none');\r\n        }\r\n\r\n        function calculateY(originX, originY, targetX, targetY, finalX) {\r\n\r\n            if (originX === targetX) { return null; }\r\n\r\n            var gradient = (targetY - originY) / (targetX - originX),\r\n                ySource = (gradient * (finalX - originX)) + originY,\r\n                yA = ((gradient * 0.618) * (finalX - originX)) + originY,\r\n                yB = ((gradient * 0.500) * (finalX - originX)) + originY,\r\n                yC = ((gradient * 0.382) * (finalX - originX)) + originY;\r\n\r\n            return {source: ySource, a: yA, b: yB, c: yC};\r\n        }\r\n\r\n        function setFanLines(originX, originY, finalX, finalYa, finalYb, finalYc) {\r\n\r\n            var points = originX + ',' + originY\r\n                + ' ' + finalX + ',' + finalYa\r\n                + ' ' + finalX + ',' + finalYc;\r\n\r\n            lineA.attr('x1', originX)\r\n                .attr('y1', originY)\r\n                .attr('x2', finalX)\r\n                .attr('y2', finalYa);\r\n            lineB.attr('x1', originX)\r\n                .attr('y1', originY)\r\n                .attr('x2', finalX)\r\n                .attr('y2', finalYb);\r\n            lineC.attr('x1', originX)\r\n                .attr('y1', originY)\r\n                .attr('x2', finalX)\r\n                .attr('y2', finalYc);\r\n            fanArea.attr('points', points);\r\n        }\r\n\r\n        fibonacciFan.update = function () {\r\n\r\n            if (locationOrigin) {\r\n\r\n                var originX = xScale(locationOrigin.point.date),\r\n                    originY = yScale(locationOrigin.point[locationOrigin.field]);\r\n\r\n                circleOrigin.attr('cx', originX)\r\n                    .attr('cy', originY);\r\n                lineSource.attr('x1', originX)\r\n                    .attr('y1', originY);\r\n\r\n                if (locationTarget && (phase !== 1)) {\r\n\r\n                    var targetX = xScale(locationTarget.point.date),\r\n                        targetY = yScale(locationTarget.point[locationTarget.field]);\r\n\r\n                    circleTarget.attr('cx', targetX)\r\n                        .attr('cy', targetY);\r\n                    lineSource.attr('x2', targetX)\r\n                        .attr('y2', targetY);\r\n\r\n                    if (phase === 3) {\r\n\r\n                        var finalX = xScale.range()[1],\r\n                            finalY = calculateY(originX, originY, targetX, targetY, finalX);\r\n\r\n                        if (finalY) {\r\n                            setFanLines(originX, originY, finalX, finalY.a, finalY.b, finalY.c);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        fibonacciFan.visible = function (value) {\r\n\r\n            if (value) {\r\n\r\n                switch (phase) {\r\n                    case 1: {\r\n                        circleOrigin.attr('display', 'inherit');\r\n                        break;\r\n                    }\r\n                    case 2: {\r\n                        circleOrigin.attr('display', 'inherit');\r\n                        circleTarget.attr('display', 'inherit');\r\n                        lineSource.attr('display', 'inherit');\r\n                        break;\r\n                    }\r\n                    case 3: {\r\n                        lineSource.attr('display', 'inherit');\r\n                        lineA.attr('display', 'inherit');\r\n                        lineB.attr('display', 'inherit');\r\n                        lineC.attr('display', 'inherit');\r\n                        fanArea.attr('display', 'inherit');\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n\r\n                circleOrigin.attr('display', 'none');\r\n                circleTarget.attr('display', 'none');\r\n                lineSource.attr('display', 'none');\r\n                lineA.attr('display', 'none');\r\n                lineB.attr('display', 'none');\r\n                lineC.attr('display', 'none');\r\n                fanArea.attr('display', 'none');\r\n            }\r\n        };\r\n\r\n        fibonacciFan.target = function (value) {\r\n            if (!arguments.length) {\r\n                return target;\r\n            }\r\n\r\n            if (target) {\r\n\r\n                target.on('mousemove.fibonacci-fan', null);\r\n                target.on('click.fibonacci-fan', null);\r\n            }\r\n\r\n            target = value;\r\n\r\n            target.on('mousemove.fibonacci-fan', mousemove);\r\n            target.on('click.fibonacci-fan', mouseclick);\r\n\r\n            return fibonacciFan;\r\n        };\r\n\r\n        fibonacciFan.series = function (value) {\r\n            if (!arguments.length) {\r\n                return series;\r\n            }\r\n            series = value;\r\n            return fibonacciFan;\r\n        };\r\n\r\n        fibonacciFan.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return fibonacciFan;\r\n        };\r\n\r\n        fibonacciFan.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return fibonacciFan;\r\n        };\r\n\r\n        fibonacciFan.active = function (value) {\r\n            if (!arguments.length) {\r\n                return active;\r\n            }\r\n            active = value;\r\n            return fibonacciFan;\r\n        };\r\n\r\n        return fibonacciFan;\r\n    };\r\n\r\n}(d3, fc));","(function (d3, fc) {\r\n    'use strict';\r\n\r\n    fc.tools.measure = function () {\r\n\r\n        var target = null,\r\n            series = null,\r\n            xScale = d3.time.scale(),\r\n            yScale = d3.scale.linear(),\r\n            active = true,\r\n            padding = 2,\r\n            formatH = null,\r\n            formatV = null;\r\n\r\n        var circleOrigin = null,\r\n            circleTarget = null,\r\n            lineSource = null,\r\n            lineX = null,\r\n            lineY = null,\r\n            calloutX = null,\r\n            calloutY = null;\r\n\r\n        var phase = 1,\r\n            locationOrigin = null,\r\n            locationTarget = null;\r\n\r\n        var measure = function () {\r\n\r\n            var root = target.append('g')\r\n                .attr('class', 'measure');\r\n\r\n            circleOrigin = root.append(\"circle\")\r\n                .attr('class', 'measure origin')\r\n                .attr('r', 6)\r\n                .attr('display', 'none');\r\n\r\n            circleTarget = root.append(\"circle\")\r\n                .attr('class', 'measure target')\r\n                .attr('r', 6)\r\n                .attr('display', 'none');\r\n\r\n            lineSource = root.append(\"line\")\r\n                .attr('class', 'measure source')\r\n                .attr('display', 'none');\r\n\r\n            lineX = root.append(\"line\")\r\n                .attr('class', 'measure x')\r\n                .attr('display', 'none');\r\n\r\n            lineY = root.append(\"line\")\r\n                .attr('class', 'measure y')\r\n                .attr('display', 'none');\r\n\r\n            calloutX = root.append(\"text\")\r\n                .attr('class', 'measure callout horizontal')\r\n                .attr('style', 'text-anchor: end')\r\n                .attr('display', 'none');\r\n\r\n            calloutY = root.append(\"text\")\r\n                .attr('class', 'measure callout vertical')\r\n                .attr('style', 'text-anchor: middle')\r\n                .attr('display', 'none');\r\n        };\r\n\r\n        function mousemove() {\r\n\r\n            if (!active) {\r\n                return;\r\n            }\r\n\r\n            switch (phase) {\r\n                case 1: {\r\n                    locationOrigin = findLocation();\r\n                    if (locationOrigin) {\r\n                        measure.update();\r\n                        circleOrigin.attr('display', 'inherit');\r\n                    }\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    locationTarget = findLocation();\r\n                    if (locationTarget) {\r\n                        measure.update();\r\n                        circleTarget.attr('display', 'inherit');\r\n                        lineSource.attr('display', 'inherit');\r\n                    }\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function mouseclick() {\r\n\r\n            if (!active) {\r\n                return;\r\n            }\r\n\r\n            switch (phase) {\r\n                case 1: {\r\n\r\n                    phase = 2;\r\n                    break;\r\n                }\r\n                case 2: {\r\n\r\n                    doMeasure();\r\n\r\n                    phase = 3;\r\n                    break;\r\n                }\r\n                case 3: {\r\n\r\n                    clearAll();\r\n\r\n                    phase = 1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function findLocation() {\r\n\r\n            var mouse = [0, 0];\r\n            try {\r\n                mouse = d3.mouse(target[0][0]);\r\n            }\r\n            catch (exception) {\r\n                // Mouse is elsewhere\r\n            }\r\n\r\n            var xMouse = xScale.invert(mouse[0]),\r\n                yMouse = yScale.invert(mouse[1]),\r\n                point = findPoint(xMouse);\r\n\r\n            if (point !== null) {\r\n\r\n                var field = findField(yMouse, point);\r\n\r\n                if (field !== null) {\r\n\r\n                    return { point: point, field: field };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        function findPoint(xTarget) {\r\n\r\n            var nearest = null,\r\n                dx = Number.MAX_VALUE;\r\n\r\n            series.forEach(function(data) {\r\n\r\n                var xDiff = Math.abs(xTarget.getTime() - data.date.getTime());\r\n\r\n                if (xDiff < dx) {\r\n                    dx = xDiff;\r\n                    nearest = data;\r\n                }\r\n            });\r\n\r\n            return nearest;\r\n        }\r\n\r\n        function findField(yTarget, data) {\r\n\r\n            var field = null;\r\n\r\n            var minDiff = Number.MAX_VALUE;\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property) && (property !== 'date')) {\r\n                    var dy = Math.abs(yTarget - data[property]);\r\n                    if (dy <= minDiff) {\r\n                        minDiff = dy;\r\n                        field = property;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return field;\r\n        }\r\n\r\n        function doMeasure() {\r\n\r\n            var originX = xScale(locationOrigin.point.date),\r\n                originY = yScale(locationOrigin.point[locationOrigin.field]),\r\n                targetX = xScale(locationTarget.point.date),\r\n                targetY = yScale(locationTarget.point[locationTarget.field]);\r\n\r\n            lineX.attr('x1', originX)\r\n                .attr('y1', originY)\r\n                .attr('x2', targetX)\r\n                .attr('y2', originY);\r\n            lineY.attr('x1', targetX)\r\n                .attr('y1', originY)\r\n                .attr('x2', targetX)\r\n                .attr('y2', targetY);\r\n\r\n            calloutX.attr('x', targetX - padding)\r\n                .attr('y', originY - (originY - targetY) / 2.0)\r\n                .text(formatV(Math.abs(locationTarget.point[locationTarget.field] - locationOrigin.point[locationOrigin.field])));\r\n            calloutY.attr('y', originY - padding)\r\n                .attr('x', originX + (targetX - originX) / 2.0)\r\n                .text(formatH(Math.abs(locationTarget.point.date.getTime() - locationOrigin.point.date.getTime())));\r\n\r\n            lineX.attr('display', 'inherit');\r\n            lineY.attr('display', 'inherit');\r\n            calloutX.attr('display', 'inherit');\r\n            calloutY.attr('display', 'inherit');\r\n\r\n            circleOrigin.attr('display', 'none');\r\n            circleTarget.attr('display', 'none');\r\n        }\r\n\r\n        function clearAll() {\r\n\r\n            locationOrigin = null;\r\n            locationTarget = null;\r\n\r\n            circleOrigin.attr('display', 'none');\r\n            circleTarget.attr('display', 'none');\r\n            lineSource.attr('display', 'none');\r\n            lineX.attr('display', 'none');\r\n            lineY.attr('display', 'none');\r\n            calloutX.attr('display', 'none');\r\n            calloutY.attr('display', 'none');\r\n        }\r\n\r\n        measure.update = function () {\r\n\r\n            if (locationOrigin) {\r\n\r\n                var originX = xScale(locationOrigin.point.date),\r\n                    originY = yScale(locationOrigin.point[locationOrigin.field]);\r\n\r\n                circleOrigin.attr('cx', originX)\r\n                    .attr('cy', originY);\r\n                lineSource.attr('x1', originX)\r\n                    .attr('y1', originY);\r\n\r\n                if (locationTarget && (phase !== 1)) {\r\n\r\n                    var targetX = xScale(locationTarget.point.date),\r\n                        targetY = yScale(locationTarget.point[locationTarget.field]);\r\n\r\n                    circleTarget.attr('cx', targetX)\r\n                        .attr('cy', targetY);\r\n                    lineSource.attr('x2', targetX)\r\n                        .attr('y2', targetY);\r\n\r\n                    if (phase === 3) {\r\n\r\n                        doMeasure();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        measure.visible = function (value) {\r\n\r\n            if (value) {\r\n\r\n                switch (phase) {\r\n                    case 1: {\r\n                        circleOrigin.attr('display', 'inherit');\r\n                        break;\r\n                    }\r\n                    case 2: {\r\n                        circleOrigin.attr('display', 'inherit');\r\n                        circleTarget.attr('display', 'inherit');\r\n                        lineSource.attr('display', 'inherit');\r\n                        break;\r\n                    }\r\n                    case 3: {\r\n                        lineSource.attr('display', 'inherit');\r\n                        lineX.attr('display', 'inherit');\r\n                        lineY.attr('display', 'inherit');\r\n                        calloutX.attr('display', 'inherit');\r\n                        calloutY.attr('display', 'inherit');\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n\r\n                circleOrigin.attr('display', 'none');\r\n                circleTarget.attr('display', 'none');\r\n                lineSource.attr('display', 'none');\r\n                lineX.attr('display', 'none');\r\n                lineY.attr('display', 'none');\r\n                calloutX.attr('display', 'none');\r\n                calloutY.attr('display', 'none');\r\n            }\r\n        };\r\n\r\n        measure.target = function (value) {\r\n            if (!arguments.length) {\r\n                return target;\r\n            }\r\n\r\n            if (target) {\r\n\r\n                target.on('mousemove.measure', null);\r\n                target.on('click.measure', null);\r\n            }\r\n\r\n            target = value;\r\n\r\n            target.on('mousemove.measure', mousemove);\r\n            target.on('click.measure', mouseclick);\r\n\r\n            return measure;\r\n        };\r\n\r\n        measure.series = function (value) {\r\n            if (!arguments.length) {\r\n                return series;\r\n            }\r\n            series = value;\r\n            return measure;\r\n        };\r\n\r\n        measure.xScale = function (value) {\r\n            if (!arguments.length) {\r\n                return xScale;\r\n            }\r\n            xScale = value;\r\n            return measure;\r\n        };\r\n\r\n        measure.yScale = function (value) {\r\n            if (!arguments.length) {\r\n                return yScale;\r\n            }\r\n            yScale = value;\r\n            return measure;\r\n        };\r\n\r\n        measure.active = function (value) {\r\n            if (!arguments.length) {\r\n                return active;\r\n            }\r\n            active = value;\r\n            return measure;\r\n        };\r\n\r\n        measure.padding = function (value) {\r\n            if (!arguments.length) {\r\n                return padding;\r\n            }\r\n            padding = value;\r\n            return measure;\r\n        };\r\n\r\n        measure.formatH = function (value) {\r\n            if (!arguments.length) {\r\n                return formatH;\r\n            }\r\n            formatH = value;\r\n            return measure;\r\n        };\r\n\r\n        measure.formatV = function (value) {\r\n            if (!arguments.length) {\r\n                return formatV;\r\n            }\r\n            formatV = value;\r\n            return measure;\r\n        };\r\n\r\n        return measure;\r\n    };\r\n\r\n}(d3, fc));"]}